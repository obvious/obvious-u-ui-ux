buildscript {
  ext.kotlin_version = '1.7.20'
  ext.appcompat_version = '1.4.2'
  ext.junit_version = '4.12'
  ext.material_version = '1.5.0'
  repositories {
    google()
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:7.3.1'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'app.cash.paparazzi:paparazzi-gradle-plugin:1.1.0'
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
  }
  afterEvaluate {
    if (extensions.findByName("android") != null) {
      android {
        testOptions {
          unitTests {
            includeAndroidResources = true
            all {
              afterTest { TestDescriptor test, TestResult result ->
                if (result.resultType == TestResult.ResultType.FAILURE) {
                  def message = result.exception?.message ?: "Wrong answer"
                  def lines = message.readLines()
                  println "#educational_plugin FAILED + " + lines[0]
                  lines.subList(1, lines.size()).forEach { line ->
                    println "#educational_plugin" + line
                  }
                  // we need this to separate output of different tests
                  println()
                }
              }
            }
          }
        }
      }
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
  rootProject.getChildProjects().forEach{ name, project ->
    delete project.buildDir
  }
}
